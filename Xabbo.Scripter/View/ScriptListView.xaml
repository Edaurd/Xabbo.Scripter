<UserControl x:Class="Xabbo.Scripter.View.ScriptListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:Xabbo.Scripter.View"
             xmlns:scripting="clr-namespace:Xabbo.Scripter.Scripting;assembly=Xabbo.Scripter.Common"
             xmlns:viewModel="clr-namespace:Xabbo.Scripter.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type={x:Type viewModel:ScriptsViewManager}}"
             Background="{StaticResource MaterialDesignPaper}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Amber.Named.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Red.Named.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Green.Named.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Yellow.Named.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="RedBrush" Color="{StaticResource RedPrimary400}" />
            <SolidColorBrush x:Key="YellowBrush" Color="{StaticResource AmberPrimary400}" />
            <SolidColorBrush x:Key="GreenBrush" Color="{StaticResource GreenPrimary400}" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <DataGrid ItemsSource="{Binding Scripts}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False">
            <DataGrid.ItemContainerStyle>
                <Style TargetType="{x:Type DataGridRow}"
                       BasedOn="{StaticResource MaterialDesignDataGridRow}">
                    <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
                    <Style.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>
                    </Style.Resources>
                </Style>
            </DataGrid.ItemContainerStyle>
            <DataGrid.Columns>
                <md:DataGridTextColumn
                    Header="name" Width="180"
                    Binding="{Binding Name, Mode=OneWay}"
                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                >
                    <md:DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}"
                               BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>
                    </md:DataGridTextColumn.ElementStyle>
                </md:DataGridTextColumn>
                <DataGridTemplateColumn Header="status" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border Padding="4,0" CornerRadius="2"
                                    HorizontalAlignment="Center"
                                    BorderThickness="0"
                                    Background="{StaticResource MaterialDesignPaper}">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Status}" Value="None">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsRed}" Value="True">
                                                <DataTrigger.Setters>
                                                    <Setter Property="BorderBrush" Value="{StaticResource RedBrush}" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsYellow}" Value="True">
                                                <DataTrigger.Setters>
                                                    <Setter Property="BorderBrush" Value="{StaticResource YellowBrush}" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsGreen}" Value="True">
                                                <DataTrigger.Setters>
                                                    <Setter Property="BorderBrush" Value="{StaticResource GreenBrush}" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                                <TextBlock Text="{Binding StatusText, Mode=OneWay}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsRed}" Value="True">
                                                    <DataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="{StaticResource RedBrush}" />
                                                    </DataTrigger.Setters>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsYellow}" Value="True">
                                                    <DataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="{StaticResource YellowBrush}" />
                                                    </DataTrigger.Setters>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsGreen}" Value="True">
                                                    <DataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="{StaticResource GreenBrush}" />
                                                    </DataTrigger.Setters>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <md:DataGridTextColumn Header="runtime" Width="100"
                                       Binding="{Binding Runtime, StringFormat='hh\\:mm\\:ss', Mode=OneWay}">
                </md:DataGridTextColumn>
                <DataGridTextColumn
                    Width="*"
                    IsReadOnly="True"
                    CanUserReorder="False"
                    CanUserSort="False"
                />
            </DataGrid.Columns>
        </DataGrid>
        <ListView Visibility="Hidden" x:Name="listViewScripts" ItemsSource="{Binding Scripts}">
            <!--<ListView.Style>
                <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Type ListView}}">
                    <Style.Resources>
                        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                            <Setter Property="Foreground" Value="Red" />
                            <Setter Property="Background" Value="Orange" />
                            <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
                        </Style>
                    </Style.Resources>
                </Style>
            </ListView.Style>-->
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                    <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" />
            </ListView.InputBindings>
            <ListView.View>
                <GridView>
                    <GridView.Columns>
                        <GridViewColumn Header="name" Width="300">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}">
                                        <TextBlock.ToolTip>
                                            <TextBlock Text="{Binding FileName}" />
                                        </TextBlock.ToolTip>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="status" Width="120">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding StatusText, FallbackValue='?'}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="runtime" Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Runtime, StringFormat=hh\\:mm\\:ss, FallbackValue='-'}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView.Columns>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</UserControl>
