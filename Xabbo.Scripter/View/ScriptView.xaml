<UserControl x:Class="Xabbo.Scripter.View.ScriptView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModel="clr-namespace:Xabbo.Scripter.ViewModel"
             xmlns:controls="clr-namespace:Xabbo.Scripter.WPF.Controls"
             xmlns:roslynPad="clr-namespace:RoslynPad.Editor;assembly=RoslynPad.Editor.Windows"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type={x:Type viewModel:ScriptViewModel}}"
             FontFamily="Consolas"
             x:Name="root">
    <Grid x:Name="layoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid>
            <!-- Code editor -->
            <roslynPad:RoslynCodeEditor
                x:Name="codeEditor"
                Margin="2"
                SyntaxHighlighting="C#"
                ShowLineNumbers="True"
                FontFamily="Fira Code,Hack,Consolas" FontSize="9pt"
                HorizontalScrollBarVisibility="Auto"
                IsReadOnly="{Binding IsRunning}"
                Loaded="CodeEditor_Loaded"
                KeyDown="CodeEditor_KeyDown"
                TextChanged="CodeEditor_TextChanged" 
                PreviewMouseWheel="CodeEditor_MouseWheel" />
            <!-- Overlay -->
            <Canvas x:Name="overlayCanvas" IsHitTestVisible="False" Background="White">
                <Canvas.Style>
                    <Style TargetType="{x:Type Canvas}">
                        <Setter Property="Opacity" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                <Setter Property="Opacity" Value="0.5" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Canvas.Style>
            </Canvas>
        </Grid>
        <!-- Status bar -->
        <DockPanel Grid.Row="1">
            <!-- Execute button -->
            <Button x:Name="buttonExecute" DockPanel.Dock="Right"
                    Margin="2" Padding="2" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="IsEnabled" Value="False" />
                        <Setter Property="Content" Value="Execute" />
                        <Setter Property="Command" Value="{Binding ExecuteCommand}" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Host.CanExecute}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                <Setter Property="Content" Value="Cancel" />
                                <Setter Property="Command" Value="{Binding CancelCommand}" />
                                <Setter Property="IsEnabled" Value="True" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsCancelling}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <controls:GrayscaleImage IsGrayscale="{Binding IsEnabled, ElementName=buttonExecute, Converter={StaticResource NotConverter}}"
                                             Width="16" Height="16">
                        <controls:GrayscaleImage.Style>
                            <Style TargetType="{x:Type controls:GrayscaleImage}">
                                <Setter Property="Source" Value="/Xabbo.Scripter;component/Resources/Images/play.png" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                        <Setter Property="Source" Value="/Xabbo.Scripter;component/Resources/Images/stop.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:GrayscaleImage.Style>
                    </controls:GrayscaleImage>
                </Button.Content>
                <Button.ToolTip>
                    <ToolTip>
                        <ToolTip.Style>
                            <Style TargetType="{x:Type ToolTip}">
                                <Setter Property="Content" Value="Execute (F5)" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                        <Setter Property="Content" Value="Cancel" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToolTip.Style>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <!-- Status log -->
            <TextBox x:Name="textBoxLog" DockPanel.Dock="Left" 
                     Margin="2" Padding="2"
                     VerticalScrollBarVisibility="Auto"
                     VerticalContentAlignment="Center"
                     IsReadOnly="True" MaxLines="10"
                     BorderThickness="1"
                     BorderBrush="#FFF"
                     TextWrapping="Wrap" Text="{Binding ResultText}">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Foreground" Value="DarkSlateGray" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFaulted}" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="Foreground" Value="DarkRed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </DockPanel>
    </Grid>
</UserControl>
